### YamlMime:ManagedReference
items:
- uid: SaveSystem.Handlers.ObjectHandlersFactory
  commentId: T:SaveSystem.Handlers.ObjectHandlersFactory
  id: ObjectHandlersFactory
  parent: SaveSystem.Handlers
  children:
  - SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,``0,System.String)
  - SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,System.Collections.Generic.ICollection{``0},System.String)
  - SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,System.Func{``0},System.String)
  - SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,``0,System.String)
  - SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,System.Collections.Generic.ICollection{``0},System.String)
  - SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,System.Func{``0},System.String)
  - SaveSystem.Handlers.ObjectHandlersFactory.RegisterImmediately
  langs:
  - csharp
  - vb
  name: ObjectHandlersFactory
  nameWithType: ObjectHandlersFactory
  fullName: SaveSystem.Handlers.ObjectHandlersFactory
  type: Class
  source:
    id: ObjectHandlersFactory
    path: C:\UnityProjects\UnityPackages\Assets\com.dducode.save-system\Runtime\Handlers\ObjectHandlersFactory.cs
    startLine: 15
  assemblies:
  - SaveSystem
  namespace: SaveSystem.Handlers
  summary: >-
    Use it to create <xref href="SaveSystem.Handlers.ObjectHandler%601?text=Object+Handlers" data-throw-if-not-resolved="false"></xref>,

    and <xref href="SaveSystem.Handlers.AsyncObjectHandler%601?text=Async+Object+Handlers" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class ObjectHandlersFactory
    content.vb: Public Module ObjectHandlersFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SaveSystem.Handlers.ObjectHandlersFactory.RegisterImmediately
  commentId: P:SaveSystem.Handlers.ObjectHandlersFactory.RegisterImmediately
  id: RegisterImmediately
  parent: SaveSystem.Handlers.ObjectHandlersFactory
  langs:
  - csharp
  - vb
  name: RegisterImmediately
  nameWithType: ObjectHandlersFactory.RegisterImmediately
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.RegisterImmediately
  type: Property
  source:
    id: RegisterImmediately
    path: C:\UnityProjects\UnityPackages\Assets\com.dducode.save-system\Runtime\Handlers\ObjectHandlersFactory.cs
    startLine: 24
  assemblies:
  - SaveSystem
  namespace: SaveSystem.Handlers
  summary: Configure it to automatically register handlers in the Save System Core
  example: []
  syntax:
    content: public static bool RegisterImmediately { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: >-
        If true, the Handlers Provider will register all created handlers in the Core,

        otherwise you will have to do it manually (it's false by default)
    content.vb: Public Shared Property RegisterImmediately As Boolean
  overload: SaveSystem.Handlers.ObjectHandlersFactory.RegisterImmediately*
- uid: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,System.Func{``0},System.String)
  commentId: M:SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,System.Func{``0},System.String)
  id: CreateHandler``1(System.String,System.Func{``0},System.String)
  parent: SaveSystem.Handlers.ObjectHandlersFactory
  langs:
  - csharp
  - vb
  name: CreateHandler<TO>(string, Func<TO>, string)
  nameWithType: ObjectHandlersFactory.CreateHandler<TO>(string, Func<TO>, string)
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler<TO>(string, System.Func<TO>, string)
  type: Method
  source:
    id: CreateHandler
    path: C:\UnityProjects\UnityPackages\Assets\com.dducode.save-system\Runtime\Handlers\ObjectHandlersFactory.cs
    startLine: 47
  assemblies:
  - SaveSystem
  namespace: SaveSystem.Handlers
  summary: Creates an empty handler
  example: []
  syntax:
    content: 'public static ObjectHandler<TO> CreateHandler<TO>(string filePath, Func<TO> factoryFunc, string caller = "") where TO : IPersistentObject'
    parameters:
    - id: filePath
      type: System.String
      description: Path to save and load objects
    - id: factoryFunc
      type: System.Func{{TO}}
      description: Function for objects spawn. This is necessary to load dynamic objects
    - id: caller
      type: System.String
      description: For internal use (no need to pass it manually)
    typeParameters:
    - id: TO
    return:
      type: SaveSystem.Handlers.ObjectHandler{{TO}}
    content.vb: Public Shared Function CreateHandler(Of [TO] As IPersistentObject)(filePath As String, factoryFunc As Func(Of [TO]), caller As String = "") As ObjectHandler(Of [TO])
  overload: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler*
  nameWithType.vb: ObjectHandlersFactory.CreateHandler(Of TO)(String, Func(Of TO), String)
  fullName.vb: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler(Of TO)(String, System.Func(Of TO), String)
  name.vb: CreateHandler(Of TO)(String, Func(Of TO), String)
- uid: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,``0,System.String)
  commentId: M:SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,``0,System.String)
  id: CreateHandler``1(System.String,``0,System.String)
  parent: SaveSystem.Handlers.ObjectHandlersFactory
  langs:
  - csharp
  - vb
  name: CreateHandler<TO>(string, TO, string)
  nameWithType: ObjectHandlersFactory.CreateHandler<TO>(string, TO, string)
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler<TO>(string, TO, string)
  type: Method
  source:
    id: CreateHandler
    path: C:\UnityProjects\UnityPackages\Assets\com.dducode.save-system\Runtime\Handlers\ObjectHandlersFactory.cs
    startLine: 75
  assemblies:
  - SaveSystem
  namespace: SaveSystem.Handlers
  summary: Creates an object handler that will saving a single object
  example: []
  syntax:
    content: 'public static ObjectHandler<TO> CreateHandler<TO>(string filePath, TO obj, string caller = "") where TO : IPersistentObject'
    parameters:
    - id: filePath
      type: System.String
      description: Path to save and load objects
    - id: obj
      type: '{TO}'
      description: Object which will be saved and loaded
    - id: caller
      type: System.String
      description: For internal use (no need to pass it manually)
    typeParameters:
    - id: TO
    return:
      type: SaveSystem.Handlers.ObjectHandler{{TO}}
    content.vb: Public Shared Function CreateHandler(Of [TO] As IPersistentObject)(filePath As String, obj As [TO], caller As String = "") As ObjectHandler(Of [TO])
  overload: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler*
  nameWithType.vb: ObjectHandlersFactory.CreateHandler(Of TO)(String, TO, String)
  fullName.vb: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler(Of TO)(String, TO, String)
  name.vb: CreateHandler(Of TO)(String, TO, String)
- uid: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,System.Collections.Generic.ICollection{``0},System.String)
  commentId: M:SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,System.Collections.Generic.ICollection{``0},System.String)
  id: CreateHandler``1(System.String,System.Collections.Generic.ICollection{``0},System.String)
  parent: SaveSystem.Handlers.ObjectHandlersFactory
  langs:
  - csharp
  - vb
  name: CreateHandler<TO>(string, ICollection<TO>, string)
  nameWithType: ObjectHandlersFactory.CreateHandler<TO>(string, ICollection<TO>, string)
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler<TO>(string, System.Collections.Generic.ICollection<TO>, string)
  type: Method
  source:
    id: CreateHandler
    path: C:\UnityProjects\UnityPackages\Assets\com.dducode.save-system\Runtime\Handlers\ObjectHandlersFactory.cs
    startLine: 103
  assemblies:
  - SaveSystem
  namespace: SaveSystem.Handlers
  summary: Creates an object handler that will saving some objects
  example: []
  syntax:
    content: 'public static ObjectHandler<TO> CreateHandler<TO>(string filePath, ICollection<TO> objects, string caller = "") where TO : IPersistentObject'
    parameters:
    - id: filePath
      type: System.String
      description: Path to save and load objects
    - id: objects
      type: System.Collections.Generic.ICollection{{TO}}
      description: Objects which will be saved and loaded
    - id: caller
      type: System.String
      description: For internal use (no need to pass it manually)
    typeParameters:
    - id: TO
    return:
      type: SaveSystem.Handlers.ObjectHandler{{TO}}
    content.vb: Public Shared Function CreateHandler(Of [TO] As IPersistentObject)(filePath As String, objects As ICollection(Of [TO]), caller As String = "") As ObjectHandler(Of [TO])
  overload: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler*
  nameWithType.vb: ObjectHandlersFactory.CreateHandler(Of TO)(String, ICollection(Of TO), String)
  fullName.vb: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler(Of TO)(String, System.Collections.Generic.ICollection(Of TO), String)
  name.vb: CreateHandler(Of TO)(String, ICollection(Of TO), String)
- uid: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,System.Func{``0},System.String)
  commentId: M:SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,System.Func{``0},System.String)
  id: CreateAsyncHandler``1(System.String,System.Func{``0},System.String)
  parent: SaveSystem.Handlers.ObjectHandlersFactory
  langs:
  - csharp
  - vb
  name: CreateAsyncHandler<TO>(string, Func<TO>, string)
  nameWithType: ObjectHandlersFactory.CreateAsyncHandler<TO>(string, Func<TO>, string)
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler<TO>(string, System.Func<TO>, string)
  type: Method
  source:
    id: CreateAsyncHandler
    path: C:\UnityProjects\UnityPackages\Assets\com.dducode.save-system\Runtime\Handlers\ObjectHandlersFactory.cs
    startLine: 133
  assemblies:
  - SaveSystem
  namespace: SaveSystem.Handlers
  summary: Creates an empty async handler
  example: []
  syntax:
    content: 'public static AsyncObjectHandler<TO> CreateAsyncHandler<TO>(string filePath, Func<TO> factoryFunc, string caller = "") where TO : IPersistentObjectAsync'
    parameters:
    - id: filePath
      type: System.String
      description: Path to save and load objects
    - id: factoryFunc
      type: System.Func{{TO}}
      description: Function for objects spawn. This is necessary to load dynamic objects
    - id: caller
      type: System.String
      description: For internal use (no need to pass it manually)
    typeParameters:
    - id: TO
    return:
      type: SaveSystem.Handlers.AsyncObjectHandler{{TO}}
    content.vb: Public Shared Function CreateAsyncHandler(Of [TO] As IPersistentObjectAsync)(filePath As String, factoryFunc As Func(Of [TO]), caller As String = "") As AsyncObjectHandler(Of [TO])
  overload: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler*
  nameWithType.vb: ObjectHandlersFactory.CreateAsyncHandler(Of TO)(String, Func(Of TO), String)
  fullName.vb: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler(Of TO)(String, System.Func(Of TO), String)
  name.vb: CreateAsyncHandler(Of TO)(String, Func(Of TO), String)
- uid: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,``0,System.String)
  commentId: M:SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,``0,System.String)
  id: CreateAsyncHandler``1(System.String,``0,System.String)
  parent: SaveSystem.Handlers.ObjectHandlersFactory
  langs:
  - csharp
  - vb
  name: CreateAsyncHandler<TO>(string, TO, string)
  nameWithType: ObjectHandlersFactory.CreateAsyncHandler<TO>(string, TO, string)
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler<TO>(string, TO, string)
  type: Method
  source:
    id: CreateAsyncHandler
    path: C:\UnityProjects\UnityPackages\Assets\com.dducode.save-system\Runtime\Handlers\ObjectHandlersFactory.cs
    startLine: 161
  assemblies:
  - SaveSystem
  namespace: SaveSystem.Handlers
  summary: Creates an object handler that will saving a single object async
  example: []
  syntax:
    content: 'public static AsyncObjectHandler<TO> CreateAsyncHandler<TO>(string filePath, TO obj, string caller = "") where TO : IPersistentObjectAsync'
    parameters:
    - id: filePath
      type: System.String
      description: Path to save and load objects
    - id: obj
      type: '{TO}'
      description: Objects which will be saved
    - id: caller
      type: System.String
      description: For internal use (no need to pass it manually)
    typeParameters:
    - id: TO
    return:
      type: SaveSystem.Handlers.AsyncObjectHandler{{TO}}
    content.vb: Public Shared Function CreateAsyncHandler(Of [TO] As IPersistentObjectAsync)(filePath As String, obj As [TO], caller As String = "") As AsyncObjectHandler(Of [TO])
  overload: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler*
  nameWithType.vb: ObjectHandlersFactory.CreateAsyncHandler(Of TO)(String, TO, String)
  fullName.vb: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler(Of TO)(String, TO, String)
  name.vb: CreateAsyncHandler(Of TO)(String, TO, String)
- uid: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,System.Collections.Generic.ICollection{``0},System.String)
  commentId: M:SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,System.Collections.Generic.ICollection{``0},System.String)
  id: CreateAsyncHandler``1(System.String,System.Collections.Generic.ICollection{``0},System.String)
  parent: SaveSystem.Handlers.ObjectHandlersFactory
  langs:
  - csharp
  - vb
  name: CreateAsyncHandler<TO>(string, ICollection<TO>, string)
  nameWithType: ObjectHandlersFactory.CreateAsyncHandler<TO>(string, ICollection<TO>, string)
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler<TO>(string, System.Collections.Generic.ICollection<TO>, string)
  type: Method
  source:
    id: CreateAsyncHandler
    path: C:\UnityProjects\UnityPackages\Assets\com.dducode.save-system\Runtime\Handlers\ObjectHandlersFactory.cs
    startLine: 189
  assemblies:
  - SaveSystem
  namespace: SaveSystem.Handlers
  summary: Creates an object handler that will saving some objects async
  example: []
  syntax:
    content: 'public static AsyncObjectHandler<TO> CreateAsyncHandler<TO>(string filePath, ICollection<TO> objects, string caller = "") where TO : IPersistentObjectAsync'
    parameters:
    - id: filePath
      type: System.String
      description: Path to save and load objects
    - id: objects
      type: System.Collections.Generic.ICollection{{TO}}
      description: Objects which will be saved
    - id: caller
      type: System.String
      description: For internal use (no need to pass it manually)
    typeParameters:
    - id: TO
    return:
      type: SaveSystem.Handlers.AsyncObjectHandler{{TO}}
    content.vb: Public Shared Function CreateAsyncHandler(Of [TO] As IPersistentObjectAsync)(filePath As String, objects As ICollection(Of [TO]), caller As String = "") As AsyncObjectHandler(Of [TO])
  overload: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler*
  nameWithType.vb: ObjectHandlersFactory.CreateAsyncHandler(Of TO)(String, ICollection(Of TO), String)
  fullName.vb: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler(Of TO)(String, System.Collections.Generic.ICollection(Of TO), String)
  name.vb: CreateAsyncHandler(Of TO)(String, ICollection(Of TO), String)
references:
- uid: SaveSystem.Handlers.ObjectHandler`1
  commentId: T:SaveSystem.Handlers.ObjectHandler`1
  href: SaveSystem.Handlers.ObjectHandler-1.html
  name: ObjectHandler<TO>
  nameWithType: ObjectHandler<TO>
  fullName: SaveSystem.Handlers.ObjectHandler<TO>
  nameWithType.vb: ObjectHandler(Of TO)
  fullName.vb: SaveSystem.Handlers.ObjectHandler(Of TO)
  name.vb: ObjectHandler(Of TO)
  spec.csharp:
  - uid: SaveSystem.Handlers.ObjectHandler`1
    name: ObjectHandler
    href: SaveSystem.Handlers.ObjectHandler-1.html
  - name: <
  - name: TO
  - name: '>'
  spec.vb:
  - uid: SaveSystem.Handlers.ObjectHandler`1
    name: ObjectHandler
    href: SaveSystem.Handlers.ObjectHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TO
  - name: )
- uid: SaveSystem.Handlers.AsyncObjectHandler`1
  commentId: T:SaveSystem.Handlers.AsyncObjectHandler`1
  href: SaveSystem.Handlers.AsyncObjectHandler-1.html
  name: AsyncObjectHandler<TO>
  nameWithType: AsyncObjectHandler<TO>
  fullName: SaveSystem.Handlers.AsyncObjectHandler<TO>
  nameWithType.vb: AsyncObjectHandler(Of TO)
  fullName.vb: SaveSystem.Handlers.AsyncObjectHandler(Of TO)
  name.vb: AsyncObjectHandler(Of TO)
  spec.csharp:
  - uid: SaveSystem.Handlers.AsyncObjectHandler`1
    name: AsyncObjectHandler
    href: SaveSystem.Handlers.AsyncObjectHandler-1.html
  - name: <
  - name: TO
  - name: '>'
  spec.vb:
  - uid: SaveSystem.Handlers.AsyncObjectHandler`1
    name: AsyncObjectHandler
    href: SaveSystem.Handlers.AsyncObjectHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TO
  - name: )
- uid: SaveSystem.Handlers
  commentId: N:SaveSystem.Handlers
  href: SaveSystem.html
  name: SaveSystem.Handlers
  nameWithType: SaveSystem.Handlers
  fullName: SaveSystem.Handlers
  spec.csharp:
  - uid: SaveSystem
    name: SaveSystem
    href: SaveSystem.html
  - name: .
  - uid: SaveSystem.Handlers
    name: Handlers
    href: SaveSystem.Handlers.html
  spec.vb:
  - uid: SaveSystem
    name: SaveSystem
    href: SaveSystem.html
  - name: .
  - uid: SaveSystem.Handlers
    name: Handlers
    href: SaveSystem.Handlers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SaveSystem.Handlers.ObjectHandlersFactory.RegisterImmediately*
  commentId: Overload:SaveSystem.Handlers.ObjectHandlersFactory.RegisterImmediately
  href: SaveSystem.Handlers.ObjectHandlersFactory.html#SaveSystem.Handlers.ObjectHandlersFactory.RegisterImmediately
  name: RegisterImmediately
  nameWithType: ObjectHandlersFactory.RegisterImmediately
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.RegisterImmediately
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler*
  commentId: Overload:SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler
  href: SaveSystem.Handlers.ObjectHandlersFactory.html#SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler``1(System.String,System.Func{``0},System.String)
  name: CreateHandler
  nameWithType: ObjectHandlersFactory.CreateHandler
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.CreateHandler
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Func{{TO}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TO>
  nameWithType: Func<TO>
  fullName: System.Func<TO>
  nameWithType.vb: Func(Of TO)
  fullName.vb: System.Func(Of TO)
  name.vb: Func(Of TO)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TO
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TO
  - name: )
- uid: SaveSystem.Handlers.ObjectHandler{{TO}}
  commentId: T:SaveSystem.Handlers.ObjectHandler{``0}
  parent: SaveSystem.Handlers
  definition: SaveSystem.Handlers.ObjectHandler`1
  href: SaveSystem.Handlers.ObjectHandler-1.html
  name: ObjectHandler<TO>
  nameWithType: ObjectHandler<TO>
  fullName: SaveSystem.Handlers.ObjectHandler<TO>
  nameWithType.vb: ObjectHandler(Of TO)
  fullName.vb: SaveSystem.Handlers.ObjectHandler(Of TO)
  name.vb: ObjectHandler(Of TO)
  spec.csharp:
  - uid: SaveSystem.Handlers.ObjectHandler`1
    name: ObjectHandler
    href: SaveSystem.Handlers.ObjectHandler-1.html
  - name: <
  - name: TO
  - name: '>'
  spec.vb:
  - uid: SaveSystem.Handlers.ObjectHandler`1
    name: ObjectHandler
    href: SaveSystem.Handlers.ObjectHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TO
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: '{TO}'
  commentId: '!:TO'
  definition: TO
  name: TO
  nameWithType: TO
  fullName: TO
- uid: TO
  name: TO
  nameWithType: TO
  fullName: TO
- uid: System.Collections.Generic.ICollection{{TO}}
  commentId: T:System.Collections.Generic.ICollection{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TO>
  nameWithType: ICollection<TO>
  fullName: System.Collections.Generic.ICollection<TO>
  nameWithType.vb: ICollection(Of TO)
  fullName.vb: System.Collections.Generic.ICollection(Of TO)
  name.vb: ICollection(Of TO)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TO
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TO
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler*
  commentId: Overload:SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler
  href: SaveSystem.Handlers.ObjectHandlersFactory.html#SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler``1(System.String,System.Func{``0},System.String)
  name: CreateAsyncHandler
  nameWithType: ObjectHandlersFactory.CreateAsyncHandler
  fullName: SaveSystem.Handlers.ObjectHandlersFactory.CreateAsyncHandler
- uid: SaveSystem.Handlers.AsyncObjectHandler{{TO}}
  commentId: T:SaveSystem.Handlers.AsyncObjectHandler{``0}
  parent: SaveSystem.Handlers
  definition: SaveSystem.Handlers.AsyncObjectHandler`1
  href: SaveSystem.Handlers.AsyncObjectHandler-1.html
  name: AsyncObjectHandler<TO>
  nameWithType: AsyncObjectHandler<TO>
  fullName: SaveSystem.Handlers.AsyncObjectHandler<TO>
  nameWithType.vb: AsyncObjectHandler(Of TO)
  fullName.vb: SaveSystem.Handlers.AsyncObjectHandler(Of TO)
  name.vb: AsyncObjectHandler(Of TO)
  spec.csharp:
  - uid: SaveSystem.Handlers.AsyncObjectHandler`1
    name: AsyncObjectHandler
    href: SaveSystem.Handlers.AsyncObjectHandler-1.html
  - name: <
  - name: TO
  - name: '>'
  spec.vb:
  - uid: SaveSystem.Handlers.AsyncObjectHandler`1
    name: AsyncObjectHandler
    href: SaveSystem.Handlers.AsyncObjectHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TO
  - name: )
